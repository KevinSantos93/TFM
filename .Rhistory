shinyApp(ui, server)
runApp()
datos %>%
ggplot(aes(x = nota, fill = color)) +
geom_histogram(color = "black", breaks = seq(0, 10, by = 0.1)) +
labs(title = "Resultados nacionales", x = "Nota", y = "Frecuencia") +
scale_x_continuous(breaks = seq(0, 10, 2), lim = c(2, 6.5)) +
theme(legend.position = "none")
runApp()
runApp()
runApp()
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM")
# Load the rsconnect package
library(rsconnect)
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM")
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM")
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM")
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM", appName = 'tfmkfs')
shiny::runApp()
runApp()
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM", appName = 'tfmkfs')
estudiantes <. read_excel("7.°.xlsx")
estudiantes <- read_excel("7.°.xlsx")
View(estudiantes)
prueba <- read.xlsx('7.°.xlsx')
prueba <- prueba[,1:30]
clavesOM <- read.xlsx('7.°.xlsx', sheet = 'key')
library(dplyr)
library(openxlsx)
library(tidyverse)
library(CTT)
library(ltm)
library(psych)
library(readxl)
library(RColorBrewer)
prueba <- read.xlsx('7.°.xlsx')
prueba <- prueba[,1:30]
clavesOM <- read.xlsx('7.°.xlsx', sheet = 'key')
mat <- prueba %>%
filter(!if_all(c(11:30), is.na))
mat <- mat %>%
mutate_at(vars(starts_with("MAT")), ~ifelse(is.na(.), "C99", .)) %>%
mutate_at(vars(starts_with("MAT")), str_remove_all, pattern = "\\s+")
notas <- score(mat[,11:30], clavesOM$Clave, output.scored = T)
calif <- mat[,1:9]
calif <- cbind(calif, data.frame(notas$scored))
calif$nota <- (notas$score/20)*10
View(calif)
write.xlsx(calif[,3:30], 'estudiantes.xlsx')
runApp()
runApp()
runApp()
filtro <- estudiantes %>%
filter(codigo == input$codigo)
View(estudiantes)
estudiantes <- read_excel("resultados.xlsx", sheet = "estudiantes")
filtro <- estudiantes %>%
filter(codigo == input$codigo)
filtro <- estudiantes %>%
filter(codigo == 10061)
View(filtro)
# Agrupar las notas en los segmentos
grupo <- cut(notas, breaks = c(0, 5, 7.5, 10), labels = c("0-5", "5-7.5", "7.5-10"))
View(filtro)
# Agrupar las notas en los segmentos
grupo <- cut(filtro$nota, breaks = c(0, 5, 7.5, 10), labels = c("0-5", "5-7.5", "7.5-10"))
# Agrupar las notas en los segmentos
grupo <- cut(filtro$nota, breaks = c(0, 5, 7.5, 10), labels = c("0-5", "5-7.5", "7.5-10"))
runApp()
# Agrupar las notas en los segmentos
grupo <- cut(filtro$nota, breaks = c(0, 5, 7.5, 10), labels = c("0-5", "5-7.5", "7.5-10"))
filtro <- estudiantes %>%
filter(codigo == 10061)
# Agrupar las notas en los segmentos
grupo <- cut(filtro$nota, breaks = c(0, 5, 7.5, 10), labels = c("0-5", "5-7.5", "7.5-10"))
# Calcular el porcentaje de estudiantes en cada segmento
porcentaje <- table(grupo) / length(filtro$notas) * 100
# Calcular el porcentaje de estudiantes en cada segmento
porcentaje <- table(grupo) / length(filtro$notas) * 100
View(filtro)
# Calcular el porcentaje de estudiantes en cada segmento
porcentaje <- table(grupo) / length(filtro$nota) * 100
# Crear un dataframe con los resultados
df_resultados <- data.frame(Segmento = names(porcentaje), Porcentaje = porcentaje)
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Porcentaje)) +
geom_ribbon(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
View(df_resultados)
# Crear un dataframe con los resultados
df_resultados <- data.frame(Segmento = names(porcentaje), Porcentaje = porcentaje)
View(df_resultados)
colnames(df_resultados) <- c("Segmento","Grupo", "Frecuencia")
View(df_resultados)
# Crear un dataframe con los resultados
df_resultados <- data.frame(Porcentaje = porcentaje)
View(df_resultados)
colnames(df_resultados) <- c("Segmento", "Frecuencia")
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Frecuencia)) +
geom_ribbon(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Frecuencia)) +
geom_ribbon(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
View(df_resultados)
# Agrupar las notas en los segmentos
grupo <- cut(filtro$nota, breaks = c(0, 5, 7.5, 10), labels = c("Bajo", "Medio", "Alto"))
# Calcular el porcentaje de estudiantes en cada segmento
porcentaje <- table(grupo) / length(filtro$nota) * 100
# Crear un dataframe con los resultados
df_resultados <- data.frame(Porcentaje = porcentaje)
colnames(df_resultados) <- c("Segmento", "Frecuencia")
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Frecuencia)) +
geom_ribbon(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
View(df_resultados)
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Porcentaje)) +
geom_ribbon(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
colnames(df_resultados) <- c("Segmento", "Porcentaje")
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Porcentaje)) +
geom_ribbon(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
ggplot(df_resultados, aes(x = Segmento, ymin = 0, ymax = Porcentaje)) +
geom_bar(fill = "skyblue", alpha = 0.5) +
labs(title = "Distribución de notas por segmento", y = "Porcentaje") +
theme_minimal() +
scale_y_continuous(labels = scales::percent_format(scale = 1))
filtro$desempeño <- ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
View(filtro)
ggplot(filtro) +
geom_boxplot()
ggplot(filtro) +
geom_boxplot(aes(nota))
View(filtro)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Crear el bar plot
ggplot(filtro, aes(x = nota, fill = desempeño)) +
geom_bar() +
labs(x = "Nota", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)")
con <- dbConnect(RMySQL::MySQL(),
dbname = "sql5713395",
host = "sql5.freesqldatabase.com",
port = 3306,
user = "sql5713395",
password = "qV3i3j3lYZ")
##extraer datos y guardar en csv
#dbSendQuery(con, 'set character set "latin1"')
#dbSendQuery(con, 'SET NAMES latin1')
resultados <- dbGetQuery(con, "SELECT * FROM page_data")
library(RMySQL)
library(data.table)
con <- dbConnect(RMySQL::MySQL(),
dbname = "sql5713395",
host = "sql5.freesqldatabase.com",
port = 3306,
user = "sql5713395",
password = "qV3i3j3lYZ")
##extraer datos y guardar en csv
#dbSendQuery(con, 'set character set "latin1"')
#dbSendQuery(con, 'SET NAMES latin1')
resultados <- dbGetQuery(con, "SELECT * FROM page_data")
View(resultados)
#Eliminar los que han ingresado 1 en página
dbSendQuery(con, 'DELETE FROM page_data WHERE Page = 1')
##extraer datos y guardar en csv
#dbSendQuery(con, 'set character set "latin1"')
#dbSendQuery(con, 'SET NAMES latin1')
resultados <- dbGetQuery(con, "SELECT * FROM page_data")
# Crear el bar plot
ggplot(filtro, aes(x = nota, fill = desempeño)) +
geom_bar() +
labs(x = "Nota", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)")
filtro$groupo <- 1
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "Nota", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)")
View(filtro)
filtro$desempeño <- ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
filtro$grupo <- 1
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "Nota", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)")
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)")
runApp()
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip()
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL)
runApp()
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
output$estudiantes <- renderPlot({
filtro <- estudiantes %>%
filter(codigo == input$codigo)
filtro$desempeño <- ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
filtro$grupo <- 1
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(plot.margin = margin( 1, 1, 1, "cm"))
})
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(plot.margin = margin(0.2,1, 1, "cm"))
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(plot.margin = margin(0.2, 1, 1, 1, "cm"))
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(plot.margin = margin(0.2, 0.2, 1, 1, "cm"))
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(plot.margin = margin(-1, 0.2, 1, 1, "cm"))
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL)
runApp()
filtro$desempeño <-ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
filtro$desempeño <- factor(filtro$desempeño, levels = c("Bajo", "Medio", "Alto"))
filtro$grupo <- 1
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar() +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño por Nota (Ribbon Plot)") +
coord_flip() +
scale_x_discrete(labels = NULL)
View(estudiantes)
runApp()
runApp()
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
runApp()
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = reorder(desempeño))) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
# Crear el bar plot
ggplot(filtro, aes(x = grupo, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
filtro$desempeño <- factor(filtro$desempeño, levels = c("Bajo", "Medio", "Alto"))
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
runApp()
filtro$desempeño <- relevel(filtro$desempeño, 'Alto')
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
filtro$desempeño <- relevel(filtro$desempeño, 'Bajo')
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
filtro$desempeño <-ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
filtro$desempeño <- factor(filtro$desempeño, levels = c("Bajo", "Medio", "Alto"))
filtro$desempeño <- relevel(filtro$desempeño, 'Bajo')
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
runApp()
# Crear el bar plot
ggplot(filtro[order(filtro$desempeño,decreasing=T)], aes(x = 1, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
filtro$desempeño <-ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
filtro$desempeño <- factor(filtro$desempeño, levels = c("Bajo", "Medio", "Alto"))
# Crear el bar plot
ggplot(filtro[order(filtro$desempeño,decreasing=T)], aes(x = 1, fill = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
filtro[order(filtro$desempeño,decreasing=T)]
filtro[order(filtro$desempeño,decreasing=T)]
View(filtro)
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = -desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
filtro$desempeño <- factor(filtro$desempeño, levels = c("Alto", "Medio", "Bajo"))
filtro$desempeño <-ifelse(filtro$nota < 5, "Bajo", ifelse(filtro$nota < 7.5, "Medio", "Alto"))
filtro$desempeño <- factor(filtro$desempeño, levels = c("Alto", "Medio", "Bajo"))
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20))  # Tamaño del título del gráfico)
runApp()
scale_fill_manual(values=c('red', 'purple', 'pink'))
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20)),  # Tamaño del título del gráfico) +
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20)) +  # Tamaño del título del gráfico) +
scale_fill_manual(values=c('red', 'purple', 'pink'))
runApp()
runApp()
runApp()
runApp()
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20)) +  # Tamaño del título del gráfico) +
scale_fill_manual(values=c('#9BC53D', '#5BC0EB', '#FFCC66')) +
scale_x_continuous(lim = c(0, 1))
runApp()
runApp()
runApp()
runApp()
runApp()
datos %>%
ggplot(aes(x = nota, fill = color)) +
geom_histogram(color = "black", breaks = seq(0, 10, by = 0.1)) +
labs(title = "Resultados nacionales", x = "Nota", y = "Frecuencia") +
scale_x_continuous(breaks = seq(0, 10, 0.5), lim = c(2, 6.5)) +
theme(legend.position = "none",
text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20)) +  # Tamaño del título del gráfico)
scale_fill_manual(values=c('#5BC0EB', 'gray'))
# Crear el bar plot
ggplot(filtro, aes(x = 1, fill = desempeño, order = desempeño)) +
geom_bar(position = "fill") +
labs(x = "", y = "Porcentaje", title = "Distribución de Desempeño de los estudiantes") +
coord_flip() +
scale_x_discrete(labels = NULL) +
theme(text = element_text(size = 20),  # Cambia el tamaño de la letra en general
axis.title = element_text(size = 18),  # Tamaño de las etiquetas de los ejes
axis.text = element_text(size = 18),  # Tamaño de los números en los ejes
plot.title = element_text(size = 20)) +  # Tamaño del título del gráfico) +
scale_fill_manual(values=c('#9BC53D', '#5BC0EB', '#FFCC66'))
runApp()
runApp()
runApp()
runApp()
runApp()
# Deploy the application
rsconnect::deployApp("C:/Users/KSerrano/Documents/GitHub/TFM", appName = 'tfmkfs')
